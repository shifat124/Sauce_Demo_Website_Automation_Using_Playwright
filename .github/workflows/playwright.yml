name: Playwright Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests with Allure and HTML reporters
        run: npx playwright test

      - name: Generate Allure report
        run: |
          npx allure generate allure-results --clean -o allure-report
          touch allure-report/.nojekyll  # Prevents GitHub Pages from using Jekyll for the directory

      - name: Prepare Playwright HTML report
        run: |
          mv playwright-report html-report
          touch html-report/.nojekyll  # Prevents GitHub Pages from using Jekyll for the directory

      - name: Upload Allure HTML Report as Artifact
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: allure-html-report
          path: allure-report/
          retention-days: 30

      - name: Upload Playwright HTML Report as Artifact
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: playwright-html-report
          path: html-report/
          retention-days: 30

      - name: Upload Allure Results as Artifact
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: allure-results
          path: allure-results/
          retention-days: 30
